package View;

import Control.MainController;

import javax.lang.model.element.Element;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 * Created by janpa on 12.09.2016.
 */
public class GUI extends JFrame
{
    private JPanel panel;
    private JEditorPane editorPane1;
    private JButton dialogue1;
    private JButton dialogue3Button;
    private JButton dialogue4Button;
    private JButton dialogue1Button;
    private JButton dialogue2Button;
    private JTextPane textPane1;
    public String text;
    private Timer timer;
    boolean nameEntered;
    private int buttonPressed;


    public GUI()
    {
        this.setContentPane(panel);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();
        this.setVisible(true);
        this.setResizable(false);
        this.setTitle("Text Adventure");
        textPane1.setToolTipText("Dialogue");
        textPane1.setEditable(false);
        dialogue1Button.setEnabled(false);
        dialogue2Button.setEnabled(false);
        dialogue3Button.setEnabled(false);
        dialogue4Button.setEnabled(false);

        dialogue1Button.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                buttonPressed = 1;
            }
        });

        dialogue2Button.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                buttonPressed = 2;
            }
        });

        dialogue3Button.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                buttonPressed = 3;
            }
        });

        dialogue4Button.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                buttonPressed = 4;
            }
        });

        textPane1.addKeyListener(new KeyAdapter()
        {
            @Override
            public void keyPressed(KeyEvent e)
            {
                if (e.getKeyCode() == 10)
                {
                    nameEntered = true;
                }
            }
        });
    }

    public void enterText(char s, Color c)
    {
        StyledDocument doc = textPane1.getStyledDocument();

        Style style = textPane1.addStyle("Color", null);
        StyleConstants.setForeground(style, c);

        String test = textPane1.getText() + s;
        textPane1.setText(test);
    }

    public void buttonText(String s1, String s2, String s3, String s4)
    {
        dialogue1Button.setText(s1);
        dialogue1Button.setEnabled(true);
        dialogue2Button.setText(s2);
        dialogue2Button.setEnabled(true);
        if (s3 == null)
        {
            dialogue3Button.setEnabled(false);
        } else
        {
            dialogue3Button.setEnabled(true);
            dialogue3Button.setText(s3);
        }
        if (s4 == null)
        {
            dialogue4Button.setEnabled(false);
        } else
        {
            dialogue4Button.setEnabled(true);
            dialogue4Button.setText(s4);
        }
    }

    public void setEditable(boolean b)
    {
        textPane1.transferFocus();
        textPane1.setEditable(b);
        textPane1.setToolTipText("Enter your name");
        if (nameEntered == true)
        {
            textPane1.setToolTipText("Dialogue");
        }
    }

    public String getName()
    {
        if (nameEntered == true)
        {
            String[] lines = textPane1.getText().split("\\n");

            return lines[4];

        } else
        {
            return null;
        }
    }

    public void resetButton()
    {
        buttonPressed = 0;
    }

    public int getButtonPressed()
    {
        return buttonPressed;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 1, new Insets(10, 10, 10, 10), -1, -1));
        panel.setFont(new Font("Comic Sans MS", Font.BOLD, panel.getFont().getSize()));
        panel.setMaximumSize(new Dimension(600, 400));
        panel.setMinimumSize(new Dimension(600, 400));
        panel.setOpaque(true);
        panel.setPreferredSize(new Dimension(600, 400));
        panel.setVisible(true);
        panel.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel.getFont().getName(), panel.getFont().getStyle(), panel.getFont().getSize()), new Color(-4473925)));
        dialogue1Button = new JButton();
        dialogue1Button.setText(" ");
        panel.add(dialogue1Button, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dialogue2Button = new JButton();
        dialogue2Button.setText(" ");
        panel.add(dialogue2Button, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dialogue3Button = new JButton();
        dialogue3Button.setText(" ");
        panel.add(dialogue3Button, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dialogue4Button = new JButton();
        dialogue4Button.setOpaque(true);
        dialogue4Button.setText(" ");
        panel.add(dialogue4Button, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textPane1 = new JTextPane();
        textPane1.setEditable(true);
        textPane1.setToolTipText("");
        panel.add(textPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return panel;
    }
}
